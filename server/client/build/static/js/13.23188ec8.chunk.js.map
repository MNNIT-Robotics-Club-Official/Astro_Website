{"version":3,"sources":["../node_modules/@material-ui/icons/esm/PermIdentity.js","../node_modules/dom-helpers/esm/matches.js","../node_modules/@restart/hooks/esm/useGlobalListener.js","../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/react-overlays/esm/DropdownContext.js","../node_modules/react-overlays/esm/DropdownMenu.js","../node_modules/react-overlays/esm/DropdownToggle.js","../node_modules/react-overlays/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/react-bootstrap/esm/NavDropdown.js","../node_modules/react-bootstrap/esm/NavbarBrand.js","../node_modules/react-bootstrap/esm/NavbarCollapse.js","../node_modules/react-bootstrap/esm/NavbarToggle.js","../node_modules/react-bootstrap/esm/Navbar.js"],"names":["createSvgIcon","React","d","matchesImpl","useGlobalListener","event","handler","capture","eventTarget","listener","useEventCallback","useEffect","target","addEventListener","removeEventListener","useEventListener","useCallback","document","DropdownContext","createContext","noop","useDropdownMenu","options","context","useContext","_useCallbackRef","useCallbackRef","arrowElement","attachArrowRef","hasShownRef","useRef","_options","flip","offset","rootCloseEvent","_options$fixed","fixed","_options$popperConfig","popperConfig","_options$usePopper","usePopper","shouldUsePopper","show","alignEnd","current","_ref","drop","setMenu","menuElement","toggleElement","placement","popper","mergeOptionsWithPopperConfig","enabled","enableEvents","menuProps","_extends","ref","id","attributes","style","styles","metadata","hasShown","toggle","arrowProps","arrow","useRootClose","e","clickTrigger","disabled","propTypes","children","PropTypes","func","isRequired","bool","oneOf","object","string","DropdownMenu","_ref2","_useDropdownMenu","_objectWithoutPropertiesLoose","props","meta","createElement","Fragment","displayName","defaultProps","useDropdownToggle","_ref$show","_ref$toggle","setToggle","handleClick","onClick","DropdownToggle","_useDropdownToggle","node","focusFirstItemOnShow","itemSelector","defaultShow","onToggle","useRefWithUpdate","forceUpdate","useForceUpdate","attachRef","element","Dropdown","rawShow","rawOnToggle","_ref$itemSelector","_useUncontrolledProp","useUncontrolledProp","_useRefWithUpdate","menuRef","_useRefWithUpdate2","toggleRef","lastShow","usePrevious","lastSourceEvent","focusInDropdown","nextShow","useMemo","contains","activeElement","focusToggle","focus","maybeFocusFirst","type","focusType","selector","body","nativeMatch","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","n","s","call","test","first","qsa","getNextFocusedChild","items","index","indexOf","Math","max","min","length","_menuRef$current","_toggleRef$current","key","fromMenu","fromToggle","tagName","next","preventDefault","_next","once","stopPropagation","Provider","value","Menu","Toggle","as","SafeAnchor","DropdownItem","forwardRef","bsPrefix","className","eventKey","href","onSelect","propActive","active","Component","prefix","useBootstrapPrefix","onSelectCtx","SelectableContext","activeKey","NavContext","makeEventKey","classNames","useWrappedRefWithWarning","componentName","alignDirection","oneOfType","shape","sm","md","lg","xl","align","alignRight","showProps","renderOnMount","_ref$as","isNavbar","NavbarContext","_usePopperMarginModif","usePopperMarginModifiers","popperRef","marginModifiers","alignClasses","keys","Object","brkPoint","direction","push","modifiers","concat","_useDropdownMenu$","useMergedRefs","close","apply","split","childBsPrefix","Button","undefined","toggleProps","DropdownHeader","createWithBsPrefix","role","DropdownDivider","DropdownItemText","pProps","_useUncontrolled","useUncontrolled","_useUncontrolled$as","navbar","handleToggle","source","currentTarget","handleSelect","BaseDropdown","Divider","Header","Item","ItemText","NavDropdown","title","menuRole","renderMenuOnMount","navItemPrefix","NavLink","NavbarBrand","NavbarCollapse","Consumer","Collapse","in","expanded","NavbarToggle","label","NavbarText","Navbar","initialBsPrefix","expand","variant","bg","sticky","_onToggle","collapseOnSelect","controlledProps","handleCollapse","arguments","expandClass","navbarContext","Brand","Text"],"mappings":"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","file":"static/js/13.23188ec8.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"\n}), 'PermIdentity');","var matchesImpl;\n/**\n * Checks if a given element matches a selector.\n * \n * @param node the element\n * @param selector the selector\n */\n\nexport default function matches(node, selector) {\n  if (!matchesImpl) {\n    var body = document.body;\n    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;\n\n    matchesImpl = function matchesImpl(n, s) {\n      return nativeMatch.call(n, s);\n    };\n  }\n\n  return matchesImpl(node, selector);\n}","import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = useCallback(function () {\n    return document;\n  }, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import React from 'react';\nvar DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n\nvar noop = function noop() {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      offset = _options.offset,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$fixed = _options.fixed,\n      fixed = _options$fixed === void 0 ? false : _options$fixed,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    enableEvents: show,\n    offset: offset,\n    flip: flip,\n    fixed: fixed,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  }));\n\n  var menuProps = _extends({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n\n  var metadata = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? _extends({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var _useDropdownMenu = useDropdownMenu(options),\n      props = _useDropdownMenu[0],\n      meta = _useDropdownMenu[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, meta.hasShown ? children(props, meta) : null);\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import PropTypes from 'prop-types';\nimport React, { useContext, useCallback } from 'react';\nimport DropdownContext from './DropdownContext';\n\nvar noop = function noop() {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  var _ref = useContext(DropdownContext) || {},\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$toggle = _ref.toggle,\n      toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n      setToggle = _ref.setToggle;\n\n  var handleClick = useCallback(function (e) {\n    toggle(!show, e);\n  }, [show, toggle]);\n  return [{\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle(_ref2) {\n  var children = _ref2.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      meta = _useDropdownToggle[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children(props, meta));\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useGlobalListener from '@restart/hooks/useGlobalListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.node,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```ts static\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\n\nfunction useRefWithUpdate() {\n  var forceUpdate = useForceUpdate();\n  var ref = useRef(null);\n  var attachRef = useCallback(function (element) {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      _ref$itemSelector = _ref.itemSelector,\n      itemSelector = _ref$itemSelector === void 0 ? '* > *' : _ref$itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n\n  var _useUncontrolledProp = useUncontrolledProp(rawShow, defaultShow, rawOnToggle),\n      show = _useUncontrolledProp[0],\n      onToggle = _useUncontrolledProp[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var _useRefWithUpdate = useRefWithUpdate(),\n      menuRef = _useRefWithUpdate[0],\n      setMenu = _useRefWithUpdate[1];\n\n  var menuElement = menuRef.current;\n\n  var _useRefWithUpdate2 = useRefWithUpdate(),\n      toggleRef = _useRefWithUpdate2[0],\n      setToggle = _useRefWithUpdate2[1];\n\n  var toggleElement = toggleRef.current;\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (nextShow, event) {\n    onToggle(nextShow, event);\n  }, [onToggle]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useGlobalListener('keydown', function (event) {\n    var _menuRef$current, _toggleRef$current;\n\n    var key = event.key;\n    var target = event.target;\n    var fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    var fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu)) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(document, 'keyup', function (e) {\n          if (e.key === 'Tab' && !e.target || !menuRef.current.contains(e.target)) {\n            onToggle(false, event);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        event.preventDefault();\n        event.stopPropagation();\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children);\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nvar DropdownItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      onSelect = _ref.onSelect,\n      propActive = _ref.active,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"eventKey\", \"disabled\", \"href\", \"onClick\", \"onSelect\", \"active\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  var onSelectCtx = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n\n  var _ref2 = navContext || {},\n      activeKey = _ref2.activeKey; // TODO: Restrict eventKey to string in v5?\n\n\n  var key = makeEventKey(eventKey, href);\n  var active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  var handleClick = useEventCallback(function (event) {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    if (onClick) onClick(event);\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n  });\n  return (\n    /*#__PURE__*/\n    // \"TS2604: JSX element type 'Component' does not have any construct or call signatures.\"\n    // @ts-ignore\n    React.createElement(Component, _extends({}, props, {\n      ref: ref,\n      href: href,\n      disabled: disabled,\n      className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n      onClick: handleClick\n    }), children)\n  );\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport usePopperMarginModifiers from './usePopperMarginModifiers';\nvar alignDirection = PropTypes.oneOf(['left', 'right']);\nexport var alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n})]);\nvar defaultProps = {\n  align: 'left',\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      align = _ref.align,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      showProps = _ref.show,\n      renderOnMount = _ref.renderOnMount,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      popperConfig = _ref.popperConfig,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"align\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"show\", \"renderOnMount\", \"as\", \"popperConfig\"]);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _usePopperMarginModif = usePopperMarginModifiers(),\n      popperRef = _usePopperMarginModif[0],\n      marginModifiers = _usePopperMarginModif[1];\n\n  var alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      var keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        var brkPoint = keys[0];\n        var direction = align[brkPoint]; // .dropdown-menu-right is required for responsively aligning\n        // left in addition to align left classes.\n        // Reuse alignRight to toggle the class below.\n\n        alignRight = direction === 'left';\n        alignClasses.push(prefix + \"-\" + brkPoint + \"-\" + direction);\n      }\n    } else if (align === 'right') {\n      alignRight = true;\n    }\n  }\n\n  var _useDropdownMenu = useDropdownMenu({\n    flip: flip,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    popperConfig: _extends({}, popperConfig, {\n      modifiers: marginModifiers.concat((popperConfig == null ? void 0 : popperConfig.modifiers) || [])\n    })\n  }),\n      menuProps = _useDropdownMenu[0],\n      _useDropdownMenu$ = _useDropdownMenu[1],\n      hasShown = _useDropdownMenu$.hasShown,\n      popper = _useDropdownMenu$.popper,\n      show = _useDropdownMenu$.show,\n      alignEnd = _useDropdownMenu$.alignEnd,\n      toggle = _useDropdownMenu$.toggle;\n\n  menuProps.ref = useMergedRefs(popperRef, useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref));\n  if (!hasShown && !renderOnMount) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = function () {\n      return toggle == null ? void 0 : toggle(false);\n    };\n\n    menuProps.alignRight = alignEnd;\n  }\n\n  var style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _extends({}, props.style, menuProps.style);\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, menuProps, {\n    style: style,\n    className: classNames.apply(void 0, [className, prefix, show && 'show', alignEnd && prefix + \"-right\"].concat(alignClasses))\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0];\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nvar DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  defaultProps: {\n    role: 'separator'\n  }\n});\nvar DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  navbar: false\n};\nvar Dropdown = /*#__PURE__*/React.forwardRef(function (pProps, ref) {\n  var _useUncontrolled = useUncontrolled(pProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      drop = _useUncontrolled.drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      alignRight = _useUncontrolled.alignRight,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"drop\", \"show\", \"className\", \"alignRight\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\"]);\n\n  var onSelectCtx = useContext(SelectableContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var handleToggle = useEventCallback(function (nextShow, event, source) {\n    if (source === void 0) {\n      source = event.type;\n    }\n\n    if (event.currentTarget === document && (source !== 'keydown' || event.key === 'Escape')) source = 'rootClose';\n\n    if (onToggle) {\n      onToggle(nextShow, event, {\n        source: source\n      });\n    }\n  });\n  var handleSelect = useEventCallback(function (key, event) {\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n    handleToggle(false, event, 'select');\n  });\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, /*#__PURE__*/React.createElement(BaseDropdown, {\n    drop: drop,\n    show: show,\n    alignEnd: alignRight,\n    onToggle: handleToggle,\n    focusFirstItemOnShow: focusFirstItemOnShow,\n    itemSelector: \".\" + prefix + \"-item:not(.disabled):not(:disabled)\"\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'right' && 'dropright', drop === 'left' && 'dropleft')\n  }))));\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nDropdown.Divider = DropdownDivider;\nDropdown.Header = DropdownHeader;\nDropdown.Item = DropdownItem;\nDropdown.ItemText = DropdownItemText;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Dropdown from './Dropdown';\nimport NavLink from './NavLink';\nvar NavDropdown = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      rootCloseEvent = _ref.rootCloseEvent,\n      menuRole = _ref.menuRole,\n      disabled = _ref.disabled,\n      active = _ref.active,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"title\", \"children\", \"bsPrefix\", \"className\", \"rootCloseEvent\", \"menuRole\", \"disabled\", \"active\", \"renderMenuOnMount\"]);\n\n  /* NavItem has no additional logic, it's purely presentational. Can set nav item class here to support \"as\" */\n  var navItemPrefix = useBootstrapPrefix(undefined, 'nav-item');\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, navItemPrefix)\n  }), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    id: id,\n    eventKey: null,\n    active: active,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    as: NavLink\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nNavDropdown.displayName = 'NavDropdown';\nNavDropdown.Item = Dropdown.Item;\nNavDropdown.ItemText = Dropdown.ItemText;\nNavDropdown.Divider = Dropdown.Divider;\nNavDropdown.Header = Dropdown.Header;\nexport default NavDropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar NavbarBrand = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  var Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }));\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nvar NavbarCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"bsPrefix\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  return /*#__PURE__*/React.createElement(NavbarContext.Consumer, null, function (context) {\n    return /*#__PURE__*/React.createElement(Collapse, _extends({\n      in: !!(context && context.expanded)\n    }, props), /*#__PURE__*/React.createElement(\"div\", {\n      ref: ref,\n      className: bsPrefix\n    }, children));\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nvar defaultProps = {\n  label: 'Toggle navigation'\n};\nvar NavbarToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      label = _ref.label,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"label\", \"as\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n\n  var _ref2 = useContext(NavbarContext) || {},\n      onToggle = _ref2.onToggle,\n      expanded = _ref2.expanded;\n\n  var handleClick = useEventCallback(function (e) {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed')\n  }), children || /*#__PURE__*/React.createElement(\"span\", {\n    className: bsPrefix + \"-icon\"\n  }));\n});\nNavbarToggle.displayName = 'NavbarToggle';\nNavbarToggle.defaultProps = defaultProps;\nexport default NavbarToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback, useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport SelectableContext from './SelectableContext';\nvar NavbarText = createWithBsPrefix('navbar-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  expand: true,\n  variant: 'light',\n  collapseOnSelect: false\n};\nvar Navbar = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    expanded: 'onToggle'\n  }),\n      initialBsPrefix = _useUncontrolled.bsPrefix,\n      expand = _useUncontrolled.expand,\n      variant = _useUncontrolled.variant,\n      bg = _useUncontrolled.bg,\n      fixed = _useUncontrolled.fixed,\n      sticky = _useUncontrolled.sticky,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'nav' : _useUncontrolled$as,\n      expanded = _useUncontrolled.expanded,\n      _onToggle = _useUncontrolled.onToggle,\n      onSelect = _useUncontrolled.onSelect,\n      collapseOnSelect = _useUncontrolled.collapseOnSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"expand\", \"variant\", \"bg\", \"fixed\", \"sticky\", \"className\", \"children\", \"as\", \"expanded\", \"onToggle\", \"onSelect\", \"collapseOnSelect\"]);\n\n  var bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  var handleCollapse = useCallback(function () {\n    if (onSelect) onSelect.apply(void 0, arguments);\n\n    if (collapseOnSelect && expanded) {\n      if (_onToggle) {\n        _onToggle(false);\n      }\n    }\n  }, [onSelect, collapseOnSelect, expanded, _onToggle]); // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n\n  var expandClass = bsPrefix + \"-expand\";\n  if (typeof expand === 'string') expandClass = expandClass + \"-\" + expand;\n  var navbarContext = useMemo(function () {\n    return {\n      onToggle: function onToggle() {\n        return _onToggle && _onToggle(!expanded);\n      },\n      bsPrefix: bsPrefix,\n      expanded: !!expanded\n    };\n  }, [bsPrefix, expanded, _onToggle]);\n  return /*#__PURE__*/React.createElement(NavbarContext.Provider, {\n    value: navbarContext\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleCollapse\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: classNames(className, bsPrefix, expand && expandClass, variant && bsPrefix + \"-\" + variant, bg && \"bg-\" + bg, sticky && \"sticky-\" + sticky, fixed && \"fixed-\" + fixed)\n  }), children)));\n});\nNavbar.defaultProps = defaultProps;\nNavbar.displayName = 'Navbar';\nNavbar.Brand = NavbarBrand;\nNavbar.Toggle = NavbarToggle;\nNavbar.Collapse = NavbarCollapse;\nNavbar.Text = NavbarText;\nexport default Navbar;"],"sourceRoot":""}